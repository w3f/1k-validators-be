apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  serviceName: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: {{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        ports:
        - name: backend
          containerPort: {{ .Values.backendPort }}
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: {{ .Values.backendPort }}
          failureThreshold: 6
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 60
        volumeMounts:
        - name: data
          mountPath: /data
        - name: secret-config
          mountPath: /code/packages/core/config/secret.json
          subPath: secret.json
          readOnly: true
        - name: main-config
          mountPath: /code/packages/core/config/main.json
          subPath: main.json
          readOnly: true
      {{- if ne .Values.environment "ci" }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- end }}
      {{- if eq .Values.environment "ci" }}
        env:
        - name: CI
          value: "true"
      {{- end }}
      volumes:
      - name: secret-config
        secret:
          secretName: {{ .Release.Name }}
      - name: main-config
        configMap:
          name: {{ .Release.Name }}
      {{ if eq .Values.environment "ci" }}
      - name: data
        emptyDir: {}
      {{ else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.storageSize }}
      {{ end }}
