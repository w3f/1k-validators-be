version: '3'
services:
    node_alice:
        image: wpank/polkadot-super-fast
        ports:
            - "30333:30333"
            - "9944:9944"
        volumes:
            - "polkadot-data-alice:/alice"
        command: polkadot --chain=polkadot-local --telemetry-url 'ws://172.28.1.15:8001/submit 9' --validator --unsafe-ws-external --rpc-methods Unsafe --unsafe-rpc-external --ws-port 9944 --rpc-cors all --pruning archive --alice --node-key aa788920201122290fc7d3faf00698d9a8e061d7173424da2a31a8130a882a5f
        depends_on:
            - telemetry-backend-core
            - mongo
            - 1kv-core
        networks:
            testing_net:
                ipv4_address: 172.28.1.1

    node_bob:
        image: wpank/polkadot-super-fast
        ports:
            - "30334:30334"
            - "9945:9945"
        volumes:
            - "polkadot-data-bob:/bob"
        command: polkadot --chain=polkadot-local --telemetry-url 'ws://172.28.1.15:8001/submit 9' --validator --unsafe-ws-external --rpc-methods Unsafe --unsafe-rpc-external --rpc-cors all --ws-port 9945 --pruning archive --bob --bootnodes /ip4/172.28.1.1/tcp/30333/p2p/12D3KooWCJC43YRmb5WJcJmskPSxbkWY4Vp6jPKdFeggnXPxgBCw --port 30334
        depends_on:
            - telemetry-backend-core
            - mongo
            - 1kv-core
        networks:
            testing_net:
                ipv4_address: 172.28.1.2

    node_charlie:
        image: wpank/polkadot-super-fast
        ports:
            - "30335:30335"
            - "9946:9946"
        volumes:
            - "polkadot-data-charlie:/charlie"
        command: polkadot --chain=polkadot-local --telemetry-url 'ws://172.28.1.15:8001/submit 9' --validator --unsafe-ws-external --rpc-methods Unsafe --unsafe-rpc-external --rpc-cors all --ws-port 9946 --pruning archive --charlie --bootnodes /ip4/172.28.1.1/tcp/30333/p2p/12D3KooWCJC43YRmb5WJcJmskPSxbkWY4Vp6jPKdFeggnXPxgBCw --port 30335
        depends_on:
            - telemetry-backend-core
            - mongo
            - 1kv-core
        networks:
            testing_net:
                ipv4_address: 172.28.1.3

    node_dave:
        image: wpank/polkadot-super-fast
        ports:
            - "30336:30336"
            - "9947:9947"
        volumes:
            - "polkadot-data-dave:/dave"
        command: polkadot --chain=polkadot-local --telemetry-url 'ws://172.28.1.15:8001/submit 9' --validator --unsafe-ws-external --rpc-methods Unsafe --unsafe-rpc-external --rpc-cors all --ws-port 9947 --pruning archive --dave --bootnodes /ip4/172.28.1.1/tcp/30333/p2p/12D3KooWCJC43YRmb5WJcJmskPSxbkWY4Vp6jPKdFeggnXPxgBCw --port 30336
        depends_on:
            - telemetry-backend-core
            - mongo
            - 1kv-core
        networks:
            testing_net:
                ipv4_address: 172.28.1.4

    node_eve:
        image: wpank/polkadot-super-fast
        ports:
            - "30337:30337"
            - "9948:9948"
        volumes:
            - "polkadot-data-eve:/eve"
        command: polkadot --chain=polkadot-local --telemetry-url 'ws://172.28.1.15:8001/submit 9' --validator --unsafe-ws-external --rpc-methods Unsafe --unsafe-rpc-external --rpc-cors all --ws-port 9948 --pruning archive --eve --bootnodes /ip4/172.28.1.1/tcp/30333/p2p/12D3KooWCJC43YRmb5WJcJmskPSxbkWY4Vp6jPKdFeggnXPxgBCw --port 30337
        depends_on:
            - telemetry-backend-core
            - mongo
            - 1kv-core
        networks:
            testing_net:
                ipv4_address: 172.28.1.5

    node_ferdie:
        image: wpank/polkadot-super-fast
        ports:
            - "30338:30338"
            - "9949:9949"
        volumes:
            - "polkadot-data-ferdie:/ferdie"
        command: polkadot --chain=polkadot-local --telemetry-url 'ws://172.28.1.15:8001/submit 9' --validator --unsafe-ws-external --rpc-methods Unsafe --unsafe-rpc-external --rpc-cors all --ws-port 9949 --pruning archive --ferdie --bootnodes /ip4/172.28.1.1/tcp/30333/p2p/12D3KooWCJC43YRmb5WJcJmskPSxbkWY4Vp6jPKdFeggnXPxgBCw --port 30338
        depends_on:
            - telemetry-backend-core
            - mongo
            - 1kv-core
        networks:
            testing_net:
                ipv4_address: 172.28.1.6

    1kv-core:
      build:
        context: .
        args:
          PACKAGE: core
        dockerfile: ./Dockerfile-dev
      volumes:
        - .:/app
      ports:
        - "3300:3300"
      networks:
        testing_net:
          ipv4_address: 172.28.1.7

    1kv-gateway:
      build:
        context: .
        args:
          PACKAGE: gateway
        dockerfile: ./Dockerfile-dev
      volumes:
        - .:/app
      ports:
        - "3301:3301"
      networks:
        testing_net:
          ipv4_address: 172.28.1.8

    1kv-telemetry:
      build:
        context: .
        args:
          PACKAGE: telemetry
        dockerfile: ./Dockerfile-dev
      volumes:
        - .:/app
      networks:
        testing_net:
          ipv4_address: 172.28.1.9

    1kv-worker:
      build:
        context: .
        args:
          PACKAGE: worker
        dockerfile: ./Dockerfile-dev
      volumes:
        - .:/app
      deploy:
        mode: replicated
        replicas: 2
      restart: unless-stopped
      networks:
        testing_net:
#          ipv4_address: 172.28.1.16


    telemetry-backend-core:
        image: parity/substrate-telemetry-backend:latest
        environment:
        - PORT=8000
        ports:
        - 8000:8000
        expose:
        - 8000
        restart: always
        command: telemetry_core --listen 0.0.0.0:8000 --expose-node-ips --feed-timeout 60
        networks:
            testing_net:
                ipv4_address: 172.28.1.10

    telemetry-backend-shard:
        image: parity/substrate-telemetry-backend:latest
        environment:
        - PORT=8001
        ports:
        - 8001:8001
        expose:
        - 8001
        command: telemetry_shard --listen 0.0.0.0:8001 --core http://172.28.1.10:8000/shard_submit 
        networks:
            testing_net:
                ipv4_address: 172.28.1.15
    
    telemetry-frontend:
        image: parity/substrate-telemetry-frontend:latest
        ports:
            - 3000:8000
        expose:
            - 3000
        read_only: true
        tmpfs:
            - /var/cache/nginx:uid=101,gid=101
            - /var/run:uid=101,gid=101
            - /app/tmp:uid=101,gid=101
        environment:
            - SUBSTRATE_TELEMETRY_URL=ws://172.28.1.10:8000/feed 
        networks:
            testing_net:
                ipv4_address: 172.28.1.11

    mongo:
        image: mongo
        restart: always
        ports:
            - "27017:27017"
        networks:
            testing_net:
                ipv4_address: 172.28.1.12

    mongo-express:
      image: mongo-express
      environment:
        - ME_CONFIG_MONGODB_SERVER=mongo
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
        - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
        - ME_CONFIG_MONGODB_AUTH_USERNAME=${MONGO_ROOT_USER}
        - ME_CONFIG_MONGODB_AUTH_PASSWORD=${MONGO_ROOT_PASSWORD}
        - ME_CONFIG_BASICAUTH_USERNAME=${MONGOEXPRESS_LOGIN}
        - ME_CONFIG_BASICAUTH_PASSWORD=${MONGOEXPRESS_PASSWORD}
      depends_on:
        - mongo
      ports:
        - "8888:8081"
      networks:
        testing_net:
          ipv4_address: 172.28.1.14

    redis:
      image: redis:alpine
      expose:
        - "6379"
      volumes:
        - ./redis:/data
      restart: always
      command: ["redis-server", "--bind", "172.28.1.13", "--port", "6379"]
      logging:
        driver: "json-file"
        options:
          max-size: "50m"
      networks:
        default:
        testing_net:
          ipv4_address: 172.28.1.13





volumes:
    polkadot-data-alice:
    polkadot-data-bob:
    polkadot-data-charlie:
    polkadot-data-dave:
    polkadot-data-eve:
    polkadot-data-ferdie:

networks:
    testing_net:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16
